/*! startae-reset.css v1.0.0 */
html,
body,
p,
ol,
ul,
li,
dl,
dt,
dd,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0; }

*,
::before,
::after {
  background-repeat: no-repeat;
  /* 1 */
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  /* 2 */ }

::before,
::after {
  text-decoration: inherit;
  /* 1 */
  vertical-align: inherit;
  /* 2 */ }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  cursor: default;
  /* 2 */
  line-height: 1.15;
  /* 3 */
  -ms-text-size-adjust: 100%;
  /* 4 */
  -webkit-text-size-adjust: 100%;
  /* 4 */ }

article,
aside,
footer,
header,
nav,
section {
  display: block; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal; }

figcaption,
figure,
main {
  display: block;
  /* 1 */ }

figure {
  margin: 1em 40px; }

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

nav ol,
nav ul {
  list-style: none; }

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

a:hover,
a:active {
  outline: none; }

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

b,
strong {
  font-weight: inherit; }

b,
strong {
  font-weight: bolder; }

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

dfn {
  font-style: italic; }

mark {
  background-color: #ffff00;
  color: #000000; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

::-moz-selection {
  background-color: #ff20b1;
  /* 1 */
  color: #fff;
  /* 1 */
  text-shadow: none; }

::selection {
  background-color: #ff20b1;
  /* 1 */
  color: #fff;
  /* 1 */
  text-shadow: none; }

img,
embed,
iframe,
object,
audio,
video,
input,
textarea {
  height: auto;
  max-width: 100%; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

iframe {
  border: 0; }

audio,
video {
  display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0; }

img {
  border-style: none; }

svg {
  fill: currentColor; }

svg:not(:root) {
  overflow: hidden; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0;
  text-align: left; }

button,
input,
optgroup,
select,
textarea {
  margin: 0; }

button,
input,
select,
textarea {
  background-color: transparent;
  color: inherit;
  font-size: inherit;
  line-height: inherit; }

fieldset {
  min-width: 0;
  border: 0; }

button,
input {
  /* 1 */
  overflow: visible; }

button,
select {
  /* 1 */
  text-transform: none; }

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

textarea {
  overflow: auto;
  /* 1 */
  resize: none;
  /* 2 */ }

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

details,
menu {
  display: block; }

summary {
  display: list-item; }

canvas {
  display: inline-block; }

template {
  display: none; }

a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
  /* 1 */
  touch-action: manipulation; }

[hidden] {
  display: none; }

[aria-busy="true"] {
  cursor: progress; }

[aria-controls] {
  cursor: pointer; }

[aria-hidden="false"][hidden]:not(:focus) {
  clip: rect(0, 0, 0, 0);
  display: inherit;
  position: absolute; }

[aria-disabled] {
  cursor: default; }

body {
  background: #3C12C6;
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 1em;
  line-height: 1.5;
  color: #fff;
  padding: 2.5em 2.5em 3em 2.5em; }

@-webkit-keyframes noise {
  0%, 100% {
    background-position: 0 0; }
  10% {
    background-position: -5% -10%; }
  20% {
    background-position: -15% 5%; }
  30% {
    background-position: 7% -25%; }
  40% {
    background-position: 20% 25%; }
  50% {
    background-position: -25% 10%; }
  60% {
    background-position: 15% 5%; }
  70% {
    background-position: 0% 15%; }
  80% {
    background-position: 25% 35%; }
  90% {
    background-position: -10% 10%; } }

@keyframes noise {
  0%, 100% {
    background-position: 0 0; }
  10% {
    background-position: -5% -10%; }
  20% {
    background-position: -15% 5%; }
  30% {
    background-position: 7% -25%; }
  40% {
    background-position: 20% 25%; }
  50% {
    background-position: -25% 10%; }
  60% {
    background-position: 15% 5%; }
  70% {
    background-position: 0% 15%; }
  80% {
    background-position: 25% 35%; }
  90% {
    background-position: -10% 10%; } }

a {
  color: #80FFCC;
  text-decoration: none; }
  a:hover {
    text-decoration: underline;
    color: #ff20b1; }

h1 {
  font-size: 1.8em;
  font-weight: bold;
  margin-bottom: 30px; }

h2 {
  font-size: 1.3em;
  font-weight: bold;
  margin-bottom: 30px; }

p {
  font-size: 1em;
  margin-bottom: 20px;
  color: rgba(255, 255, 255, 0.8); }

.container {
  max-width: 600px;
  margin-left: auto;
  margin-right: auto; }

.hero__image {
  text-align: right;
  margin-bottom: 30px;
  position: relative; }
  .hero__image::before {
    content: "";
    z-index: 100;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url("/assets/images/noise.png");
    -webkit-animation: 1s infinite noise;
            animation: 1s infinite noise;
    pointer-events: none; }
  .hero__image img {
    width: 100%;
    -webkit-box-shadow: 10px 10px 0 0px rgba(32, 10, 105, 0.9);
            box-shadow: 10px 10px 0 0px rgba(32, 10, 105, 0.9); }

hr {
  margin: 0;
  padding: 0;
  border: none;
  height: 2px;
  line-height: 0;
  background: rgba(255, 255, 255, 0.1);
  display: block;
  margin-bottom: 20px; }

blockquote {
  font-family: serif;
  font-style: italic; }

.body-border {
  background: rgba(32, 10, 105, 0.9);
  position: fixed;
  z-index: 1; }

.body-border--left,
.body-border--right {
  top: 0;
  bottom: 0;
  width: 10px; }

.body-border--left {
  left: 0; }

.body-border--right {
  right: 0; }

.body-border--top,
.body-border--bottom {
  left: 0;
  right: 0;
  height: 10px; }

.body-border--top {
  top: 0; }

.body-border--bottom {
  bottom: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
